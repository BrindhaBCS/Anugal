<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240702 09:19:25.249" generator="Rebot 6.0.2 (Python 3.12.1 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="C:\Anugal_Testing\Anugal\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240702 09:19:02.251">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240702 09:19:02.251" starttime="20240702 09:19:02.251" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240702 09:19:02.251">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240702 09:19:02.251" starttime="20240702 09:19:02.251" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240702 09:19:02.251">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240702 09:19:02.251" starttime="20240702 09:19:02.251" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240702 09:19:02.251">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240702 09:19:02.260">
       Created directory '&lt;a href="file://C:\Anugal_Testing\Anugal\Output\d94fffca-609a-4dea-8667-48271bce7d0e\pabot_results\0\Screenshot"&gt;C:\Anugal_Testing\Anugal\Output\d94fffca-609a-4dea-8667-48271bce7d0e\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240702 09:19:02.260" starttime="20240702 09:19:02.251" status="PASS"/>
     </kw>
     <status endtime="20240702 09:19:02.260" starttime="20240702 09:19:02.251" status="PASS"/>
    </kw>
    <status endtime="20240702 09:19:02.260" starttime="20240702 09:19:02.251" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240702 09:19:02.260">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240702 09:19:02.260" starttime="20240702 09:19:02.260" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240702 09:19:02.260" starttime="20240702 09:19:02.260" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240702 09:19:02.260">
      ${web_test_check} = True
     </msg>
     <status endtime="20240702 09:19:02.260" starttime="20240702 09:19:02.260" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         &amp;{browser_information} = { browser_version=126.0.6478.127 | driver_version=126.0.6478.62  }
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:02.260" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         Set suite metadata 'test_browser_version' to value '126.0.6478.127'.
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         Set suite metadata 'test_driver_version' to value '126.0.6478.62 '.
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:02.260" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240702 09:19:05.369">
          Not executing on Docker
         </msg>
         <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="NOT RUN"/>
       </kw>
       <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240702 09:19:05.369">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240702 09:19:05.369">
          ${docker_check} = False
         </msg>
         <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240702 09:19:05.369">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240702 09:19:05.369">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240702 09:19:05.369">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240702 09:19:05.369">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000176CD0F6210&gt;
         </msg>
         <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000176CD0F6210&gt;
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240702 09:19:05.369">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240702 09:19:05.369">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="NOT RUN"/>
          </kw>
          <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="NOT RUN"/>
         </iter>
         <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="NOT RUN"/>
        </for>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240702 09:19:05.369">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000176CD0F6210&gt;
        </msg>
        <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
       </kw>
       <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:05.369" status="PASS"/>
      </kw>
      <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:02.260" status="PASS"/>
     </kw>
     <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:02.260" status="PASS"/>
    </kw>
    <status endtime="20240702 09:19:05.369" starttime="20240702 09:19:02.260" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240702 09:19:05.385">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240702 09:19:05.385" starttime="20240702 09:19:05.385" status="PASS"/>
   </kw>
   <status endtime="20240702 09:19:05.385" starttime="20240702 09:19:02.251" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test Access request" source="C:\Anugal_Testing\Anugal\Tests\Test_Access_request.robot">
   <test id="s1-s1-t1" line="7" name="Start TestCase">
    <kw library="Access_request" name="Start TestCase">
     <kw library="BuiltIn" name="Log">
      <arg>
       Opening browser
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240702 09:19:05.385">
       Opening browser
      </msg>
      <status endtime="20240702 09:19:05.385" starttime="20240702 09:19:05.385" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Open Browser">
      <arg>
       ${angvar('url')}
      </arg>
      <arg>
       ${angvar('browser')}
      </arg>
      <doc>
       Opens a new browser instance to the optional ``url``.
      </doc>
      <msg level="INFO" timestamp="20240702 09:19:05.385">
       Ang.Dev.url: https://dev.anugalid.com/login
      </msg>
      <msg level="INFO" timestamp="20240702 09:19:05.385">
       Ang.Dev.browser: Chrome
      </msg>
      <msg level="INFO" timestamp="20240702 09:19:05.385">
       Opening browser 'Chrome' to base url 'https://dev.anugalid.com/login'.
      </msg>
      <status endtime="20240702 09:19:07.632" starttime="20240702 09:19:05.385" status="PASS"/>
     </kw>
     <status endtime="20240702 09:19:07.632" starttime="20240702 09:19:05.385" status="PASS"/>
    </kw>
    <tag>
     Access_request
    </tag>
    <status endtime="20240702 09:19:07.633" starttime="20240702 09:19:05.385" status="PASS"/>
   </test>
   <test id="s1-s1-t2" line="10" name="Submit Anugal username and password">
    <kw library="Access_request" name="Submit Anugal username and password">
     <kw library="SeleniumLibrary" name="Wait Until Element Is Visible">
      <arg>
       ${angvar('user_text_box')}
      </arg>
      <doc>
       Waits until the element ``locator`` is visible.
      </doc>
      <msg level="INFO" timestamp="20240702 09:19:07.642">
       Ang.Dev.user_text_box: id:emailId
      </msg>
      <status endtime="20240702 09:19:07.794" starttime="20240702 09:19:07.641" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       10
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240702 09:19:17.794">
       Slept 10 seconds
      </msg>
      <status endtime="20240702 09:19:17.794" starttime="20240702 09:19:07.794" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath:(//div[@class='MuiStack-root css-1ed5314']//button)[2]
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <msg level="INFO" timestamp="20240702 09:19:17.794">
       Clicking element 'xpath:(//div[@class='MuiStack-root css-1ed5314']//button)[2]'.
      </msg>
      <status endtime="20240702 09:19:17.867" starttime="20240702 09:19:17.794" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240702 09:19:22.868">
       Slept 5 seconds
      </msg>
      <status endtime="20240702 09:19:22.868" starttime="20240702 09:19:17.867" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Input Text">
      <arg>
       xpath://*[@id="i0116"]
      </arg>
      <arg>
       malayranjan.s@basiscloudsolutions.com
      </arg>
      <doc>
       Types the given ``text`` into the text field identified by ``locator``.
      </doc>
      <msg level="INFO" timestamp="20240702 09:19:22.868">
       Typing text 'malayranjan.s@basiscloudsolutions.com' into text field 'xpath://*[@id="i0116"]'.
      </msg>
      <kw library="SeleniumLibrary" name="Capture Page Screenshot">
       <doc>
        Takes a screenshot of the current page and embeds it into a log file.
       </doc>
       <msg level="FAIL" timestamp="20240702 09:19:22.868">
        NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
       </msg>
       <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.868" status="FAIL"/>
      </kw>
      <msg level="WARN" timestamp="20240702 09:19:22.873">
       Keyword 'Capture Page Screenshot' could not be run on failure: NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
      </msg>
      <msg level="INFO" timestamp="20240702 09:19:22.873">
       Traceback (most recent call last):
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File  C:\Anugal_Testing\Anugal\Tests\Test_Access_request.robot:10
    T:  Submit Anugal username and password    
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File  C:\Anugal_Testing\Anugal\Tests\Test_Access_request.robot:11
      Submit Anugal username and password    
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File  C:\Anugal_Testing\Anugal\Tests\Resource\Access_request.robot:16
      Input Text    xpath://*[@id="i0116"]    malayranjan.s@basiscloudsolutions.com
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File  None:0
      Capture Page Screenshot    
______________________________________________________________________________
      </msg>
      <msg level="FAIL" timestamp="20240702 09:19:22.873">
       NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
      </msg>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.868" status="FAIL"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       3
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://*[@id="idSIButton9"]
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Wait Until Element Is Visible">
      <arg>
       xpath://*[@id="i0118"]
      </arg>
      <arg>
       60s
      </arg>
      <doc>
       Waits until the element ``locator`` is visible.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Input Text">
      <arg>
       xpath://*[@id="i0118"]
      </arg>
      <arg>
       Malay@Ranjan!@#
      </arg>
      <doc>
       Types the given ``text`` into the text field identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://*[@id="idSIButton9"]
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://*[@id="idBtn_Back"]
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Maximize Browser Window">
      <doc>
       Maximizes current browser window.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       20
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="NOT RUN"/>
     </kw>
     <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:07.641" status="FAIL"/>
    </kw>
    <tag>
     Access_request
    </tag>
    <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:07.634" status="FAIL">
     NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
    </status>
   </test>
   <test id="s1-s1-t3" line="13" name="Access_Request">
    <kw library="Access_request" name="Access_Request">
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath:(//img[@class='css-0'])[1]
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <msg level="INFO" timestamp="20240702 09:19:22.873">
       Clicking element 'xpath:(//img[@class='css-0'])[1]'.
      </msg>
      <kw library="SeleniumLibrary" name="Capture Page Screenshot">
       <doc>
        Takes a screenshot of the current page and embeds it into a log file.
       </doc>
       <msg level="FAIL" timestamp="20240702 09:19:22.873">
        NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
       </msg>
       <status endtime="20240702 09:19:22.873" starttime="20240702 09:19:22.873" status="FAIL"/>
      </kw>
      <msg level="WARN" timestamp="20240702 09:19:22.885">
       Keyword 'Capture Page Screenshot' could not be run on failure: NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
      </msg>
      <msg level="INFO" timestamp="20240702 09:19:22.885">
       Traceback (most recent call last):
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File  C:\Anugal_Testing\Anugal\Tests\Test_Access_request.robot:13
    T:  Access_Request    
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File  C:\Anugal_Testing\Anugal\Tests\Test_Access_request.robot:14
      Access_Request    
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File  C:\Anugal_Testing\Anugal\Tests\Resource\Access_request.robot:31
      Click Element    xpath:(//img[@class='css-0'])[1]
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File  None:0
      Capture Page Screenshot    
______________________________________________________________________________
      </msg>
      <msg level="FAIL" timestamp="20240702 09:19:22.885">
       NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
      </msg>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.873" status="FAIL"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://li[text()='Access Request']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Input Text">
      <arg>
       xpath://input[@role='combobox']
      </arg>
      <arg>
       MALAYRANJAN
      </arg>
      <doc>
       Types the given ``text`` into the text field identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://button[text()='Next']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       id:mui-component-select-category
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://li[@data-value='application']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath:(//div[@role='combobox'])[2]
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://li[text()='Symphony']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.885" starttime="20240702 09:19:22.885" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       id:mui-component-select-application
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://li[@data-value='SAP']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       id:mui-component-select-configurationId
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://li[text()='SAP DEVELOPMENT-DEV']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://button[text()='Search']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://div[@title='/BCS/SYMPHONY_AZURE']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://a[normalize-space()='Add']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       ${angvar('DATE_INPUT_from')}
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Press Keys">
      <arg>
       ${angvar('DATE_INPUT_from')}
      </arg>
      <arg>
       CTRL+a
      </arg>
      <arg>
       BACKSPACE
      </arg>
      <doc>
       Simulates the user pressing key(s) to an element or on the active browser.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Capture Page Screenshot">
      <doc>
       Takes a screenshot of the current page and embeds it into a log file.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="DateTime" name="Get Current Date">
      <var>
       ${current_date}
      </var>
      <arg>
       result_format=%Y-%m-%d
      </arg>
      <doc>
       Returns current local or UTC time with an optional increment.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="DateTime" name="Get Current Date">
      <var>
       ${valid_from}
      </var>
      <arg>
       result_format=%d-%m-%Y
      </arg>
      <arg>
       increment=+2d
      </arg>
      <doc>
       Returns current local or UTC time with an optional increment.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Capture Page Screenshot">
      <doc>
       Takes a screenshot of the current page and embeds it into a log file.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Evaluate">
      <var>
       ${current_year}
      </var>
      <arg>
       str('${current_date}').split('-')[0]
      </arg>
      <doc>
       Evaluates the given expression in Python and returns the result.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Evaluate">
      <var>
       ${current_month}
      </var>
      <arg>
       str('${current_date}').split('-')[1]
      </arg>
      <doc>
       Evaluates the given expression in Python and returns the result.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Evaluate">
      <var>
       ${current_day}
      </var>
      <arg>
       str('${current_date}').split('-')[2]
      </arg>
      <doc>
       Evaluates the given expression in Python and returns the result.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       Current Year: ${current_year}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       Current Month: ${current_month}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       Current Day: ${current_day}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Press Keys">
      <arg>
       ${angvar('DATE_INPUT_from')}
      </arg>
      <arg>
       ARROW_RIGHT
      </arg>
      <arg>
       ARROW_RIGHT
      </arg>
      <arg>
       ${current_year}
      </arg>
      <arg>
       ARROW_LEFT
      </arg>
      <arg>
       ARROW_LEFT
      </arg>
      <arg>
       ${current_day}
      </arg>
      <arg>
       ${current_month}
      </arg>
      <doc>
       Simulates the user pressing key(s) to an element or on the active browser.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Capture Page Screenshot">
      <doc>
       Takes a screenshot of the current page and embeds it into a log file.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="DateTime" name="Add Time To Date">
      <var>
       ${Target_date}
      </var>
      <arg>
       ${current_date}
      </arg>
      <arg>
       ${angvar('days_to_add')} days
      </arg>
      <arg>
       result_format=%Y-%m-%d
      </arg>
      <doc>
       Adds time to date and returns the resulting date.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Evaluate">
      <var>
       ${Target_year}
      </var>
      <arg>
       str('${Target_date}').split('-')[0]
      </arg>
      <doc>
       Evaluates the given expression in Python and returns the result.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Evaluate">
      <var>
       ${Target_month}
      </var>
      <arg>
       str('${Target_date}').split('-')[1]
      </arg>
      <doc>
       Evaluates the given expression in Python and returns the result.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Evaluate">
      <var>
       ${Target_day}
      </var>
      <arg>
       str('${Target_date}').split('-')[2]
      </arg>
      <doc>
       Evaluates the given expression in Python and returns the result.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       Current Year: ${Target_year}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       Current Month: ${Target_month}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       Current Day: ${Target_day}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Press Keys">
      <arg>
       ${angvar('DATE_INPUT_to')}
      </arg>
      <arg>
       CTRL+a
      </arg>
      <arg>
       BACKSPACE
      </arg>
      <doc>
       Simulates the user pressing key(s) to an element or on the active browser.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Capture Page Screenshot">
      <doc>
       Takes a screenshot of the current page and embeds it into a log file.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Press Keys">
      <arg>
       ${angvar('DATE_INPUT_to')}
      </arg>
      <arg>
       ARROW_RIGHT
      </arg>
      <arg>
       ARROW_RIGHT
      </arg>
      <arg>
       ${Target_year}
      </arg>
      <arg>
       ARROW_LEFT
      </arg>
      <arg>
       ARROW_LEFT
      </arg>
      <arg>
       ${Target_day}
      </arg>
      <arg>
       ${Target_month}
      </arg>
      <doc>
       Simulates the user pressing key(s) to an element or on the active browser.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Capture Page Screenshot">
      <doc>
       Takes a screenshot of the current page and embeds it into a log file.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://button[text()='Next']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Input Text">
      <arg>
       xpath://textarea[@placeholder='Leave your comments']
      </arg>
      <arg>
       Check
      </arg>
      <doc>
       Types the given ``text`` into the text field identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://button[text()='Next']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://button[text()='Submit']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       8
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       xpath://div[@data-testid='close-button']
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
     </kw>
     <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.873" status="FAIL"/>
    </kw>
    <kw library="Access_request" name="Check status">
     <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.889" status="NOT RUN"/>
    </kw>
    <tag>
     Access_request
    </tag>
    <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:22.873" status="FAIL">
     NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
    </status>
   </test>
   <status endtime="20240702 09:19:22.889" starttime="20240702 09:19:05.385" status="FAIL"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   126.0.6478.127
  </meta>
  <meta name="test_driver_version">
   126.0.6478.62
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.2.2,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.6.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.8,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,exceptiongroup==1.2.1,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.22.0,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.2,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,outcome==1.3.0.post0,packaging==24.1,pathspec==0.11.2,pillow==10.4.0,pip==24.1.1,platformdirs==4.2.2,ply==3.11,pycparser==2.22,Pygments==2.18.0,pylint==3.2.5,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.1,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.1,selenium==4.9.1,setuptools==70.2.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.5,trio==0.25.1,trio-websocket==0.11.1,typing_extensions==4.12.2,urllib3==2.2.2,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0
  </meta>
  <status endtime="20240702 09:19:22.953" starttime="20240702 09:19:01.949" status="FAIL"/>
 </suite>
 <statistics>
  <total>
   <stat fail="2" pass="1" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="2" pass="1" skip="0">
    Access_request
   </stat>
  </tag>
  <suite>
   <stat fail="2" id="s1" name="Tests" pass="1" skip="0">
    Tests
   </stat>
   <stat fail="2" id="s1-s1" name="Test Access request" pass="1" skip="0">
    Tests.Test Access request
   </stat>
  </suite>
 </statistics>
 <errors>
  <msg level="WARN" timestamp="20240702 09:19:22.873">
   Keyword 'Capture Page Screenshot' could not be run on failure: NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
  </msg>
  <msg level="WARN" timestamp="20240702 09:19:22.885">
   Keyword 'Capture Page Screenshot' could not be run on failure: NoSuchWindowException: Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.127)
Stacktrace:
	GetHandleVerifier [0x00007FF79D773E42+31618]
	(No symbol) [0x00007FF79D6EB0A9]
	(No symbol) [0x00007FF79D5A888A]
	(No symbol) [0x00007FF79D57DAE5]
	(No symbol) [0x00007FF79D6245A7]
	(No symbol) [0x00007FF79D63C131]
	(No symbol) [0x00007FF79D61CEB3]
	(No symbol) [0x00007FF79D5EA46B]
	(No symbol) [0x00007FF79D5EB001]
	GetHandleVerifier [0x00007FF79DA7A01D+3202397]
	GetHandleVerifier [0x00007FF79DAC6A3D+3516285]
	GetHandleVerifier [0x00007FF79DABC4B0+3473904]
	GetHandleVerifier [0x00007FF79D825D46+760454]
	(No symbol) [0x00007FF79D6F6B4F]
	(No symbol) [0x00007FF79D6F1CE4]
	(No symbol) [0x00007FF79D6F1E72]
	(No symbol) [0x00007FF79D6E121F]
	BaseThreadInitThunk [0x00007FFE90B64DE0+16]
	RtlUserThreadStart [0x00007FFE9193EDAB+43]
  </msg>
 </errors>
</robot>
